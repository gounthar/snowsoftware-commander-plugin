<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.jenkins-ci.plugins</groupId>
        <artifactId>plugin</artifactId>
        <version>4.51</version>
        <relativePath />
    </parent>
    <groupId>io.jenkins.plugins</groupId> 
    <artifactId>embotics-vcommander</artifactId>
    <version>2.0</version>
    
    <packaging>hpi</packaging>
    <properties>
        <!-- https://www.jenkins.io/doc/developer/plugin-development/choosing-jenkins-baseline/ -->
        <jenkins.baseline>2.346</jenkins.baseline>
        <!-- Baseline Jenkins version you use to build the plugin. Users must have this version or newer to run. -->
        <jenkins.version>${jenkins.baseline}.3</jenkins.version>
    </properties>
    
    <name>Snow Commander Plugin</name>
    <description>Snow Commander integration plugin for Jenkins</description>
    <url>https://github.com/jenkinsci/snowsoftware-commander-plugin</url>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.jenkins.tools.bom</groupId>
                <artifactId>bom-${jenkins.baseline}.x</artifactId>
                <version>1763.v092b_8980a_f5e</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- The default licence for Jenkins OSS Plugins is MIT. Substitute for the applicable one if needed. -->
    <licenses>
        <license>
            <name>MIT License</name>
            <url>http://opensource.org/licenses/MIT</url>
        </license>
    </licenses>
    
    <dependencies>
		<dependency>
			<groupId>org.jenkins-ci.plugins</groupId>
			<artifactId>credentials</artifactId>
		</dependency>
	    <dependency>
	      <groupId>org.jenkins-ci.plugins</groupId>
	      <artifactId>structs</artifactId>
	    </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-client</artifactId>
            <version>1.19.4</version>
            <scope>compile</scope>
        </dependency>
		<dependency>
		    <groupId>com.sun.jersey</groupId>
		    <artifactId>jersey-json</artifactId>
		    <version>1.17.1</version>
		    <scope>compile</scope>
		</dependency>
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.2.2</version>
        </dependency>
    </dependencies>

    <!-- If you want this to appear on the wiki page:
    <developers>
      <developer>
        <id>bhacker</id>
        <name>Bob Q. Hacker</name>
        <email>bhacker@nowhere.net</email>
      </developer>
    </developers> -->


    <scm>
        <connection>scm:git:https://github.com/jenkinsci/snowsoftware-commander-plugin.git</connection>
        <developerConnection>scm:git:git@github.com:jenkinsci/snowsoftware-commander-plugin.git</developerConnection>
        <url>https://github.com/jenkinsci/snowsoftware-commander-plugin</url>
      <tag>HEAD</tag>
  </scm>
    <repositories>
        <repository>
            <id>repo.jenkins-ci.org</id>
            <url>https://repo.jenkins-ci.org/public/</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>repo.jenkins-ci.org</id>
            <url>https://repo.jenkins-ci.org/public/</url>
        </pluginRepository>
    </pluginRepositories>
    
    <build>
    	<pluginManagement>
    		<plugins>
    			<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
    			<plugin>
    				<groupId>org.eclipse.m2e</groupId>
    				<artifactId>lifecycle-mapping</artifactId>
    				<version>1.0.0</version>
    				<configuration>
    					<lifecycleMappingMetadata>
    						<pluginExecutions>
    							<pluginExecution>
    								<pluginExecutionFilter>
    									<groupId>
    										org.apache.maven.plugins
    									</groupId>
    									<artifactId>
    										maven-javadoc-plugin
    									</artifactId>
    									<versionRange>
    										[2.10.4,)
    									</versionRange>
    									<goals>
    										<goal>javadoc</goal>
    									</goals>
    								</pluginExecutionFilter>
    								<action>
    									<ignore />
    								</action>
    							</pluginExecution>
    						</pluginExecutions>
    					</lifecycleMappingMetadata>
    				</configuration>
    			</plugin>
    		</plugins>
    	</pluginManagement>
    </build>
</project>
